[
  {
    "Name": "TestIssue9562",
    "Cases": [
      {
        "SQL": [
          "create table t1(a bigint, b bigint, c bigint)",
          "create table t2(a bigint, b bigint, c bigint, index idx(a, b, c))",
          "explain select /*+ TIDB_INLJ(t2) */ * from t1 join t2 on t2.a=t1.a and t2.b>t1.b-1 and t2.b<t1.b+1 and t2.c=t1.c"
        ],
        "Plan": [
          "HashLeftJoin_6 12475.01 root inner join, equal:[eq(test.t1.a, test.t2.a) eq(test.t1.c, test.t2.c)], other cond:gt(test.t2.b, minus(test.t1.b, 1)), lt(test.t2.b, plus(test.t1.b, 1))",
          "├─TableReader_10 9980.01 root data:Selection_9",
          "│ └─Selection_9 9980.01 cop not(isnull(test.t1.a)), not(isnull(test.t1.c))",
          "│   └─TableScan_8 10000.00 cop table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─IndexReader_13 9980.01 root index:Selection_12",
          "  └─Selection_12 9980.01 cop not(isnull(test.t2.c))",
          "    └─IndexScan_11 9990.00 cop table:t2, index:a, b, c, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": [
          "create table t(a int, b int, index idx_ab(a, b))",
          "explain select * from t t1 join t t2 where t1.b = t2.b and t2.b is null"
        ],
        "Plan": [
          "Projection_7 0.00 root test.t.a, test.t.b, test.t.a, test.t.b",
          "└─HashRightJoin_9 0.00 root inner join, equal:[eq(test.t.b, test.t.b)]",
          "  ├─TableReader_12 0.00 root data:Selection_11",
          "  │ └─Selection_11 0.00 cop isnull(test.t.b), not(isnull(test.t.b))",
          "  │   └─TableScan_10 10000.00 cop table:t2, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─TableReader_18 9990.00 root data:Selection_17",
          "    └─Selection_17 9990.00 cop not(isnull(test.t.b))",
          "      └─TableScan_16 10000.00 cop table:t1, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestStraightJoin",
    "Cases": [
      [
        "HashLeftJoin_10 10000000000000000.00 root CARTESIAN inner join",
        "├─HashLeftJoin_12 1000000000000.00 root CARTESIAN inner join",
        "│ ├─HashLeftJoin_14 100000000.00 root CARTESIAN inner join",
        "│ │ ├─TableReader_17 10000.00 root data:TableScan_16",
        "│ │ │ └─TableScan_16 10000.00 cop table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
        "│ │ └─TableReader_19 10000.00 root data:TableScan_18",
        "│ │   └─TableScan_18 10000.00 cop table:t2, range:[-inf,+inf], keep order:false, stats:pseudo",
        "│ └─TableReader_21 10000.00 root data:TableScan_20",
        "│   └─TableScan_20 10000.00 cop table:t3, range:[-inf,+inf], keep order:false, stats:pseudo",
        "└─TableReader_23 10000.00 root data:TableScan_22",
        "  └─TableScan_22 10000.00 cop table:t4, range:[-inf,+inf], keep order:false, stats:pseudo"
      ],
      [
        "HashLeftJoin_10 10000000000000000.00 root CARTESIAN inner join",
        "├─HashLeftJoin_12 1000000000000.00 root CARTESIAN inner join",
        "│ ├─HashLeftJoin_14 100000000.00 root CARTESIAN inner join",
        "│ │ ├─TableReader_17 10000.00 root data:TableScan_16",
        "│ │ │ └─TableScan_16 10000.00 cop table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
        "│ │ └─TableReader_19 10000.00 root data:TableScan_18",
        "│ │   └─TableScan_18 10000.00 cop table:t2, range:[-inf,+inf], keep order:false, stats:pseudo",
        "│ └─TableReader_21 10000.00 root data:TableScan_20",
        "│   └─TableScan_20 10000.00 cop table:t3, range:[-inf,+inf], keep order:false, stats:pseudo",
        "└─TableReader_23 10000.00 root data:TableScan_22",
        "  └─TableScan_22 10000.00 cop table:t4, range:[-inf,+inf], keep order:false, stats:pseudo"
      ],
      [
        "HashLeftJoin_11 1248750000000.00 root inner join, equal:[eq(test.t1.a, test.t4.a)]",
        "├─HashLeftJoin_13 999000000000.00 root CARTESIAN inner join",
        "│ ├─HashRightJoin_16 99900000.00 root CARTESIAN inner join",
        "│ │ ├─TableReader_19 9990.00 root data:Selection_18",
        "│ │ │ └─Selection_18 9990.00 cop not(isnull(test.t1.a))",
        "│ │ │   └─TableScan_17 10000.00 cop table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
        "│ │ └─TableReader_21 10000.00 root data:TableScan_20",
        "│ │   └─TableScan_20 10000.00 cop table:t2, range:[-inf,+inf], keep order:false, stats:pseudo",
        "│ └─TableReader_23 10000.00 root data:TableScan_22",
        "│   └─TableScan_22 10000.00 cop table:t3, range:[-inf,+inf], keep order:false, stats:pseudo",
        "└─TableReader_26 9990.00 root data:Selection_25",
        "  └─Selection_25 9990.00 cop not(isnull(test.t4.a))",
        "    └─TableScan_24 10000.00 cop table:t4, range:[-inf,+inf], keep order:false, stats:pseudo"
      ]
    ]
  },
  {
    "Name": "TestNullCount",
    "Cases": [
      [
        "TableReader_7 2.00 root data:Selection_6",
        "└─Selection_6 2.00 cop isnull(test.t.a)",
        "  └─TableScan_5 2.00 cop table:t, range:[-inf,+inf], keep order:false"
      ],
      [
        "IndexLookUp_7 2.00 root ",
        "├─IndexScan_5 2.00 cop table:t, index:a, range:[NULL,NULL], keep order:false",
        "└─TableScan_6 2.00 cop table:t, keep order:false"
      ],
      [
        "TableReader_7 0.00 root data:Selection_6",
        "└─Selection_6 0.00 cop eq(test.t.b, 1)",
        "  └─TableScan_5 2.00 cop table:t, range:[-inf,+inf], keep order:false"
      ],
      [
        "TableReader_7 0.00 root data:Selection_6",
        "└─Selection_6 0.00 cop lt(test.t.b, 1)",
        "  └─TableScan_5 2.00 cop table:t, range:[-inf,+inf], keep order:false"
      ]
    ]
  },
  {
    "Name": "TestEmptyTable",
    "Cases": [
      "TableReader(Table(t)->Sel([le(test.t.c1, 50)]))",
      "LeftHashJoin{TableReader(Table(t)->Sel([not(isnull(test.t.c1))]))->TableReader(Table(t1)->Sel([not(isnull(test.t1.c1))]))}(test.t.c1,test.t1.c1)",
      "Dual"
    ]
  },
  {
    "Name": "TestIndexRead",
    "Cases": null
  },
  {
    "Name": "TestAnalyze",
    "Cases": [
      "Analyze{Index(a),Table(a, b)}",
      "TableReader(Table(t)->Sel([le(test.t.a, 2)]))",
      "IndexReader(Index(t.b)[[-inf,2)])",
      "TableReader(Table(t)->Sel([eq(test.t.a, 1) le(test.t.b, 2)]))",
      "TableReader(Table(t1)->Sel([le(test.t1.a, 2)]))",
      "IndexLookUp(Index(t1.a)[[1,1]], Table(t1)->Sel([le(test.t1.b, 2)]))",
      "TableReader(Table(t2)->Sel([le(test.t2.a, 2)]))",
      "Analyze{Index(a),Index(b)}"
    ]
  }
]
